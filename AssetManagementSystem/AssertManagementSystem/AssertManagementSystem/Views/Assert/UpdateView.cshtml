@model AssertManagementRepository.AssertModel.Asset
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>UpdateView</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
    <style>
        input.input-validation-error,
        textarea.input-validation-error,
        select.input-validation-error {
            border: 1px solid #CD0A0A;
        }
    </style>
</head>

<body>
    <div>
        @using (Html.BeginForm("UpdateView", "Assert", FormMethod.Post))
        {
            <section class="h-100 h-custom" style="background-color: #eee;">
                <div class="container py-5 h-100">
                    <div class="row d-flex justify-content-center align-items-center h-100">
                        <div class="col-lg-8 col-xl-6">
                            <div class="card rounded-3">

                                <div class="card-body p-4 p-md-5">
                                    <h3 class="mb-4 pb-2 pb-md-0 mb-md-5 px-md-2" style="text-align:center">Add Asset</h3>
                                    @Html.HiddenFor(model => model.Id)
                                    <form class="px-md-2">

                                        <div class="form-outline mb-4">
                                            <label class="form-label" for="form3Example1q">Name</label>

                                            @Html.EditorFor(model => model.AssetName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.AssetName, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="row">
                                            <div class="col-md-6 mb-4">

                                                <div class="form-outline datepicker">
                                                    <label for="exampleDatepicker1" class="form-label">Available count</label>

                                                    @Html.EditorFor(model => model.AvailableCount, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.AvailableCount, "", new { @class = "text-danger" })

                                                </div>

                                            </div>
                                            <div class="col-md-6 mb-4">
                                                <div class="form-outline datepicker">
                                                    <label for="exampleDatepicker1" class="form-label">Category </label>

                                                    @Html.DropDownListFor(
        x => x.CategoryId,
        new List<SelectListItem>
        {
           new SelectListItem { Text = "Electronics", Value = "1" },
           new SelectListItem { Text = "Stationary",  Value = "2" },

        },
        new { @class = "form-control", @value = Model.CategoryId })


                                                </div>

                                            </div>
                                        </div>

                                        <div class="row">

                                            <div class="col-md-6">
                                                <label class="form-label" for="form3Example1w">Total Count</label>
                                                <div class="form-outline">
                                                    @Html.EditorFor(model => model.TotalCount, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.TotalCount, "", new { @class = "text-danger" })



                                                </div>

                                            </div>

                                            <div class="col-md-6">
                                                <label class="form-label" for="form3Example1w">Warranty end date </label>
                                                <div class="form-outline">
                                                    @Html.EditorFor(model => model.WarrentyEndDate, new { htmlAttributes = new { @class = "form-control", @type = "Date", @Value = Model.WarrentyEndDate.Value.ToString("yyyy/MM/dd") } })
                                                    @Html.ValidationMessageFor(model => model.WarrentyEndDate, "", new { @class = "text-danger" })

                                                </div>

                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label class="form-label" for="form3Example1w">CreatedOn</label>
                                                <div class="form-outline">
                                                    @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control", @type = "Date", @Value = Model.WarrentyEndDate.Value.ToString("yyyy/MM/dd") } })
                                                    @Html.ValidationMessageFor(model => model.WarrentyEndDate, "", new { @class = "text-danger" })

                                                </div>

                                            </div>
                                        </div>

                                        <br />
                                        <button type="submit" class="btn btn-success btn-lg mb-1" style="align-items:center">Submit</button>
                                        <button type="button" class="btn btn-info btn-lg mb-1" style="align-items:center" onclick="location.href='@Url.Action( "Index","Assert")';return false;">Back</button>
                                    </form>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        }
    </div>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#add-button").click(function () {
                ValidationForm();

            });
        });
        function ValidationForm() {
            if ($("#add-form").valid()) {
                document.forms["addForm"].submit();
            }
            else {
                return false
            }
        }

    </script>
</body>
</html>
